{
  "swagger": "2.0",
  "info": {
    "title": "protos/devloop/v1/devloop_gateway.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DevloopGatewayService"
    },
    {
      "name": "GatewayClientService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/projects": {
      "get": {
        "summary": "List all registered devloop projects.",
        "operationId": "GatewayClientService_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GatewayClientService"
        ]
      }
    },
    "/projects/{projectId}/config": {
      "get": {
        "summary": "Get the configuration for a specific devloop project.",
        "operationId": "GatewayClientService_GetConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayClientService"
        ]
      }
    },
    "/projects/{projectId}/file-content": {
      "get": {
        "summary": "Read and return the content of a specific file within a devloop project.",
        "operationId": "GatewayClientService_ReadFileContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReadFileContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayClientService"
        ]
      }
    },
    "/projects/{projectId}/historical-logs/{ruleName}": {
      "get": {
        "summary": "Retrieve historical logs for a specific rule, with optional time filtering.",
        "operationId": "GatewayClientService_GetHistoricalLogsClient",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1LogLine"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1LogLine"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "description": "Unix timestamp in milliseconds, for logs after this time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "endTime",
            "description": "Unix timestamp in milliseconds, for logs before this time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "GatewayClientService"
        ]
      }
    },
    "/projects/{projectId}/status/{ruleName}": {
      "get": {
        "summary": "Get the detailed status of a specific rule within a project.",
        "operationId": "GatewayClientService_GetRuleStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRuleStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayClientService"
        ]
      }
    },
    "/projects/{projectId}/stream/logs/{ruleName}": {
      "get": {
        "summary": "Stream real-time logs for a specific rule in a project.",
        "operationId": "GatewayClientService_StreamLogsClient",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1LogLine"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1LogLine"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayClientService"
        ]
      }
    },
    "/projects/{projectId}/trigger/{ruleName}": {
      "post": {
        "summary": "Manually trigger a specific rule in a devloop project.",
        "operationId": "GatewayClientService_TriggerRuleClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TriggerRuleClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayClientService"
        ]
      }
    },
    "/projects/{projectId}/watched-paths": {
      "get": {
        "summary": "List all glob patterns being watched by a specific devloop project.",
        "operationId": "GatewayClientService_ListWatchedPaths",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListWatchedPathsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayClientService"
        ]
      }
    }
  },
  "definitions": {
    "ListProjectsResponseProject": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "projectRoot": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "title": "e.g., \"CONNECTED\", \"DISCONNECTED\""
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1DevloopMessage": {
      "type": "object",
      "properties": {
        "correlationId": {
          "type": "string",
          "title": "Used to correlate requests and responses"
        },
        "registerRequest": {
          "$ref": "#/definitions/v1RegisterRequest",
          "title": "Messages sent from devloop to gateway"
        },
        "unregisterRequest": {
          "$ref": "#/definitions/v1UnregisterRequest"
        },
        "logLine": {
          "$ref": "#/definitions/v1LogLine"
        },
        "updateRuleStatusRequest": {
          "$ref": "#/definitions/v1UpdateRuleStatusRequest"
        },
        "getConfigResponse": {
          "$ref": "#/definitions/v1GetConfigResponse"
        },
        "getRuleStatusResponse": {
          "$ref": "#/definitions/v1GetRuleStatusResponse"
        },
        "triggerRuleResponse": {
          "$ref": "#/definitions/v1TriggerRuleResponse"
        },
        "listWatchedPathsResponse": {
          "$ref": "#/definitions/v1ListWatchedPathsResponse"
        },
        "readFileContentResponse": {
          "$ref": "#/definitions/v1ReadFileContentResponse"
        },
        "triggerRuleRequest": {
          "$ref": "#/definitions/v1TriggerRuleRequest",
          "title": "Messages sent from gateway to devloop"
        },
        "getConfigRequest": {
          "$ref": "#/definitions/v1GetConfigRequest"
        },
        "getRuleStatusRequest": {
          "$ref": "#/definitions/v1GetRuleStatusRequest"
        },
        "listWatchedPathsRequest": {
          "$ref": "#/definitions/v1ListWatchedPathsRequest"
        },
        "readFileContentRequest": {
          "$ref": "#/definitions/v1ReadFileContentRequest"
        },
        "getHistoricalLogsRequest": {
          "$ref": "#/definitions/v1GetHistoricalLogsRequest"
        }
      },
      "description": "DevloopMessage is a wrapper for all messages exchanged between devloop and the gateway."
    },
    "v1GetConfigRequest": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        }
      },
      "description": "GetConfigRequest is sent by the gateway to devloop to request config."
    },
    "v1GetConfigResponse": {
      "type": "object",
      "properties": {
        "configJson": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Responses from devloop to gateway"
    },
    "v1GetHistoricalLogsRequest": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "title": "Unix timestamp in milliseconds, for logs after this time"
        },
        "endTime": {
          "type": "string",
          "format": "int64",
          "title": "Unix timestamp in milliseconds, for logs before this time"
        }
      },
      "description": "GetHistoricalLogsRequest is sent by the gateway to devloop to request historical logs."
    },
    "v1GetRuleStatusRequest": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        }
      },
      "description": "GetRuleStatusRequest is sent by the gateway to devloop to request rule status."
    },
    "v1GetRuleStatusResponse": {
      "type": "object",
      "properties": {
        "ruleStatus": {
          "$ref": "#/definitions/v1RuleStatus"
        }
      }
    },
    "v1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListProjectsResponseProject"
          }
        }
      }
    },
    "v1ListWatchedPathsRequest": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        }
      },
      "description": "ListWatchedPathsRequest is sent by the gateway to devloop to request watched paths."
    },
    "v1ListWatchedPathsResponse": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1LogLine": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "line": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "Unix timestamp in milliseconds"
        }
      },
      "description": "LogLine represents a single log entry from a rule."
    },
    "v1ProjectInfo": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "projectRoot": {
          "type": "string"
        }
      },
      "description": "ProjectInfo represents the information about a registered devloop project."
    },
    "v1ReadFileContentRequest": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "description": "ReadFileContentRequest is sent by the gateway to devloop to request file content."
    },
    "v1ReadFileContentResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1RegisterRequest": {
      "type": "object",
      "properties": {
        "projectInfo": {
          "$ref": "#/definitions/v1ProjectInfo"
        }
      },
      "description": "RegisterRequest is sent by devloop to register with the gateway."
    },
    "v1RuleStatus": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "isRunning": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "title": "Unix timestamp in milliseconds, if running"
        },
        "lastBuildTime": {
          "type": "string",
          "format": "int64",
          "title": "Unix timestamp in milliseconds, if not running"
        },
        "lastBuildStatus": {
          "type": "string",
          "title": "e.g., \"SUCCESS\", \"FAILED\", \"RUNNING\", \"IDLE\""
        }
      },
      "description": "RuleStatus represents the current status of a rule."
    },
    "v1TriggerRuleClientResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1TriggerRuleRequest": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        }
      },
      "description": "TriggerRuleRequest is sent by the gateway to devloop to trigger a rule."
    },
    "v1TriggerRuleResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1UnregisterRequest": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        }
      },
      "description": "UnregisterRequest is sent by devloop to unregister from the gateway."
    },
    "v1UpdateRuleStatusRequest": {
      "type": "object",
      "properties": {
        "ruleStatus": {
          "$ref": "#/definitions/v1RuleStatus"
        }
      },
      "description": "UpdateRuleStatusRequest is sent by devloop to update a rule's status."
    }
  }
}
