// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: devloop/v1/agents.proto

package v1

import (
	_ "github.com/redpanda-data/protoc-gen-go-mcp/proto/gen/go/mcp/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetConfigRequest retrieves the complete configuration for a specific project.
type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_devloop_v1_agents_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{0}
}

// GetConfigResponse contains the complete project configuration.
type GetConfigResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Complete project configuration as JSON string.
	// Contains: settings (logging, colors), rules (name, commands, watch patterns)
	// Parse this JSON to understand available rule names and their configurations.
	Config        *Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_devloop_v1_agents_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigResponse) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

// GetRuleRequest retrieves the execution status of a specific rule.
type GetRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required: The name of the rule to check status for.
	// Must match a rule name from GetConfig() response (rules[].name).
	// Examples: "backend", "frontend", "tests", "build"
	RuleName      string `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleRequest) Reset() {
	*x = GetRuleRequest{}
	mi := &file_devloop_v1_agents_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleRequest) ProtoMessage() {}

func (x *GetRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleRequest.ProtoReflect.Descriptor instead.
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{2}
}

func (x *GetRuleRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

// GetRuleResponse contains the current status and history of a rule.
type GetRuleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Detailed status information including execution state, timing, and results.
	// Check rule_status.is_running to see if currently executing.
	// Check rule_status.last_build_status for SUCCESS/FAILED/IDLE state.
	Rule          *Rule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleResponse) Reset() {
	*x = GetRuleResponse{}
	mi := &file_devloop_v1_agents_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleResponse) ProtoMessage() {}

func (x *GetRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleResponse.ProtoReflect.Descriptor instead.
func (*GetRuleResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{3}
}

func (x *GetRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

// ListWatchedPathsRequest retrieves all file patterns being monitored by a project.
type ListWatchedPathsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWatchedPathsRequest) Reset() {
	*x = ListWatchedPathsRequest{}
	mi := &file_devloop_v1_agents_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWatchedPathsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWatchedPathsRequest) ProtoMessage() {}

func (x *ListWatchedPathsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWatchedPathsRequest.ProtoReflect.Descriptor instead.
func (*ListWatchedPathsRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{4}
}

// ListWatchedPathsResponse contains all file patterns being monitored.
type ListWatchedPathsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Array of glob patterns that trigger rule execution when matched files change.
	// Examples: "**/*.go", "src/**/*.js", "package.json", "**/test_*.py"
	Paths         []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWatchedPathsResponse) Reset() {
	*x = ListWatchedPathsResponse{}
	mi := &file_devloop_v1_agents_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWatchedPathsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWatchedPathsResponse) ProtoMessage() {}

func (x *ListWatchedPathsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWatchedPathsResponse.ProtoReflect.Descriptor instead.
func (*ListWatchedPathsResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{5}
}

func (x *ListWatchedPathsResponse) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

// TriggerRuleRequest starts execution of a specific rule.
type TriggerRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required: The name of the rule to execute.
	// Must match a rule name from GetConfig() response (rules[].name).
	// Examples: "backend", "frontend", "tests", "build"
	RuleName      string `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerRuleRequest) Reset() {
	*x = TriggerRuleRequest{}
	mi := &file_devloop_v1_agents_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRuleRequest) ProtoMessage() {}

func (x *TriggerRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRuleRequest.ProtoReflect.Descriptor instead.
func (*TriggerRuleRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{6}
}

func (x *TriggerRuleRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

// TriggerRuleResponse indicates whether the rule trigger was accepted.
type TriggerRuleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the trigger request was accepted and rule execution started.
	// true = rule is now running, false = trigger rejected
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Human-readable message explaining the result.
	// Use GetRule() to monitor actual execution progress.
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerRuleResponse) Reset() {
	*x = TriggerRuleResponse{}
	mi := &file_devloop_v1_agents_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRuleResponse) ProtoMessage() {}

func (x *TriggerRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRuleResponse.ProtoReflect.Descriptor instead.
func (*TriggerRuleResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{7}
}

func (x *TriggerRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TriggerRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StreamLogsRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	RuleName string                 `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Filter   string                 `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// Timeout (in seconds) if no new log lines found to be streamed
	// negative value  => Wait indefinitely/forever
	// 0 => use a default value (say 3s)
	Timeout       int64 `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsRequest) Reset() {
	*x = StreamLogsRequest{}
	mi := &file_devloop_v1_agents_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsRequest) ProtoMessage() {}

func (x *StreamLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsRequest.ProtoReflect.Descriptor instead.
func (*StreamLogsRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{8}
}

func (x *StreamLogsRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *StreamLogsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *StreamLogsRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type StreamLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lines         []*LogLine             `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsResponse) Reset() {
	*x = StreamLogsResponse{}
	mi := &file_devloop_v1_agents_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsResponse) ProtoMessage() {}

func (x *StreamLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_agents_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsResponse.ProtoReflect.Descriptor instead.
func (*StreamLogsResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_agents_proto_rawDescGZIP(), []int{9}
}

func (x *StreamLogsResponse) GetLines() []*LogLine {
	if x != nil {
		return x.Lines
	}
	return nil
}

var File_devloop_v1_agents_proto protoreflect.FileDescriptor

const file_devloop_v1_agents_proto_rawDesc = "" +
	"\n" +
	"\x17devloop/v1/agents.proto\x12\n" +
	"devloop.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x15google/api/http.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x18mcp/v1/annotations.proto\x1a\x17devloop/v1/models.proto\"\x12\n" +
	"\x10GetConfigRequest\"?\n" +
	"\x11GetConfigResponse\x12*\n" +
	"\x06config\x18\x01 \x01(\v2\x12.devloop.v1.ConfigR\x06config\"-\n" +
	"\x0eGetRuleRequest\x12\x1b\n" +
	"\trule_name\x18\x01 \x01(\tR\bruleName\"7\n" +
	"\x0fGetRuleResponse\x12$\n" +
	"\x04rule\x18\x01 \x01(\v2\x10.devloop.v1.RuleR\x04rule\"\x19\n" +
	"\x17ListWatchedPathsRequest\"0\n" +
	"\x18ListWatchedPathsResponse\x12\x14\n" +
	"\x05paths\x18\x01 \x03(\tR\x05paths\"1\n" +
	"\x12TriggerRuleRequest\x12\x1b\n" +
	"\trule_name\x18\x01 \x01(\tR\bruleName\"I\n" +
	"\x13TriggerRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"b\n" +
	"\x11StreamLogsRequest\x12\x1b\n" +
	"\trule_name\x18\x01 \x01(\tR\bruleName\x12\x16\n" +
	"\x06filter\x18\x02 \x01(\tR\x06filter\x12\x18\n" +
	"\atimeout\x18\x03 \x01(\x03R\atimeout\"?\n" +
	"\x12StreamLogsResponse\x12)\n" +
	"\x05lines\x18\x01 \x03(\v2\x13.devloop.v1.LogLineR\x05lines2\xa0\x04\n" +
	"\fAgentService\x12Y\n" +
	"\tGetConfig\x12\x1c.devloop.v1.GetConfigRequest\x1a\x1d.devloop.v1.GetConfigResponse\"\x0f\x82\xd3\xe4\x93\x02\t\x12\a/config\x12_\n" +
	"\aGetRule\x12\x1a.devloop.v1.GetRuleRequest\x1a\x1b.devloop.v1.GetRuleResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/status/{rule_name}\x12l\n" +
	"\vTriggerRule\x12\x1e.devloop.v1.TriggerRuleRequest\x1a\x1f.devloop.v1.TriggerRuleResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\"\x14/trigger/{rule_name}\x12u\n" +
	"\x10ListWatchedPaths\x12#.devloop.v1.ListWatchedPathsRequest\x1a$.devloop.v1.ListWatchedPathsResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/watched-paths\x12o\n" +
	"\n" +
	"StreamLogs\x12\x1d.devloop.v1.StreamLogsRequest\x1a\x1e.devloop.v1.StreamLogsResponse\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/stream/logs/{rule_name}0\x01B\x93\x01\n" +
	"\x0ecom.devloop.v1B\vAgentsProtoP\x01Z+github.com/panyam/devloop/gen/go/devloop/v1\xa2\x02\x03DXX\xaa\x02\n" +
	"Devloop.V1\xca\x02\n" +
	"Devloop\\V1\xe2\x02\x16Devloop\\V1\\GPBMetadata\xea\x02\vDevloop::V1b\x06proto3"

var (
	file_devloop_v1_agents_proto_rawDescOnce sync.Once
	file_devloop_v1_agents_proto_rawDescData []byte
)

func file_devloop_v1_agents_proto_rawDescGZIP() []byte {
	file_devloop_v1_agents_proto_rawDescOnce.Do(func() {
		file_devloop_v1_agents_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_devloop_v1_agents_proto_rawDesc), len(file_devloop_v1_agents_proto_rawDesc)))
	})
	return file_devloop_v1_agents_proto_rawDescData
}

var file_devloop_v1_agents_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_devloop_v1_agents_proto_goTypes = []any{
	(*GetConfigRequest)(nil),         // 0: devloop.v1.GetConfigRequest
	(*GetConfigResponse)(nil),        // 1: devloop.v1.GetConfigResponse
	(*GetRuleRequest)(nil),           // 2: devloop.v1.GetRuleRequest
	(*GetRuleResponse)(nil),          // 3: devloop.v1.GetRuleResponse
	(*ListWatchedPathsRequest)(nil),  // 4: devloop.v1.ListWatchedPathsRequest
	(*ListWatchedPathsResponse)(nil), // 5: devloop.v1.ListWatchedPathsResponse
	(*TriggerRuleRequest)(nil),       // 6: devloop.v1.TriggerRuleRequest
	(*TriggerRuleResponse)(nil),      // 7: devloop.v1.TriggerRuleResponse
	(*StreamLogsRequest)(nil),        // 8: devloop.v1.StreamLogsRequest
	(*StreamLogsResponse)(nil),       // 9: devloop.v1.StreamLogsResponse
	(*Config)(nil),                   // 10: devloop.v1.Config
	(*Rule)(nil),                     // 11: devloop.v1.Rule
	(*LogLine)(nil),                  // 12: devloop.v1.LogLine
}
var file_devloop_v1_agents_proto_depIdxs = []int32{
	10, // 0: devloop.v1.GetConfigResponse.config:type_name -> devloop.v1.Config
	11, // 1: devloop.v1.GetRuleResponse.rule:type_name -> devloop.v1.Rule
	12, // 2: devloop.v1.StreamLogsResponse.lines:type_name -> devloop.v1.LogLine
	0,  // 3: devloop.v1.AgentService.GetConfig:input_type -> devloop.v1.GetConfigRequest
	2,  // 4: devloop.v1.AgentService.GetRule:input_type -> devloop.v1.GetRuleRequest
	6,  // 5: devloop.v1.AgentService.TriggerRule:input_type -> devloop.v1.TriggerRuleRequest
	4,  // 6: devloop.v1.AgentService.ListWatchedPaths:input_type -> devloop.v1.ListWatchedPathsRequest
	8,  // 7: devloop.v1.AgentService.StreamLogs:input_type -> devloop.v1.StreamLogsRequest
	1,  // 8: devloop.v1.AgentService.GetConfig:output_type -> devloop.v1.GetConfigResponse
	3,  // 9: devloop.v1.AgentService.GetRule:output_type -> devloop.v1.GetRuleResponse
	7,  // 10: devloop.v1.AgentService.TriggerRule:output_type -> devloop.v1.TriggerRuleResponse
	5,  // 11: devloop.v1.AgentService.ListWatchedPaths:output_type -> devloop.v1.ListWatchedPathsResponse
	9,  // 12: devloop.v1.AgentService.StreamLogs:output_type -> devloop.v1.StreamLogsResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_devloop_v1_agents_proto_init() }
func file_devloop_v1_agents_proto_init() {
	if File_devloop_v1_agents_proto != nil {
		return
	}
	file_devloop_v1_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_devloop_v1_agents_proto_rawDesc), len(file_devloop_v1_agents_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_devloop_v1_agents_proto_goTypes,
		DependencyIndexes: file_devloop_v1_agents_proto_depIdxs,
		MessageInfos:      file_devloop_v1_agents_proto_msgTypes,
	}.Build()
	File_devloop_v1_agents_proto = out.File
	file_devloop_v1_agents_proto_goTypes = nil
	file_devloop_v1_agents_proto_depIdxs = nil
}
