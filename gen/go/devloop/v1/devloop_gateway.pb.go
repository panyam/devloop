// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: devloop/v1/devloop_gateway.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProjectInfo represents the information about a registered devloop project.
type ProjectInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectRoot   string                 `protobuf:"bytes,2,opt,name=project_root,json=projectRoot,proto3" json:"project_root,omitempty"`
	InternalAddr  string                 `protobuf:"bytes,3,opt,name=internal_addr,json=internalAddr,proto3" json:"internal_addr,omitempty"` // The internal address (host:port) where this devloop instance's HTTP server is listening
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectInfo) Reset() {
	*x = ProjectInfo{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfo) ProtoMessage() {}

func (x *ProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfo.ProtoReflect.Descriptor instead.
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectInfo) GetProjectRoot() string {
	if x != nil {
		return x.ProjectRoot
	}
	return ""
}

func (x *ProjectInfo) GetInternalAddr() string {
	if x != nil {
		return x.InternalAddr
	}
	return ""
}

// LogLine represents a single log entry from a rule.
type LogLine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RuleName      string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Line          string                 `protobuf:"bytes,3,opt,name=line,proto3" json:"line,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *LogLine) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *LogLine) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *LogLine) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *LogLine) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// RuleStatus represents the current status of a rule.
type RuleStatus struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProjectId       string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RuleName        string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	IsRunning       bool                   `protobuf:"varint,3,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`
	StartTime       int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                    // Unix timestamp in milliseconds, if running
	LastBuildTime   int64                  `protobuf:"varint,5,opt,name=last_build_time,json=lastBuildTime,proto3" json:"last_build_time,omitempty"`      // Unix timestamp in milliseconds, if not running
	LastBuildStatus string                 `protobuf:"bytes,6,opt,name=last_build_status,json=lastBuildStatus,proto3" json:"last_build_status,omitempty"` // e.g., "SUCCESS", "FAILED", "RUNNING", "IDLE"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RuleStatus) Reset() {
	*x = RuleStatus{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleStatus) ProtoMessage() {}

func (x *RuleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleStatus.ProtoReflect.Descriptor instead.
func (*RuleStatus) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *RuleStatus) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RuleStatus) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *RuleStatus) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

func (x *RuleStatus) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RuleStatus) GetLastBuildTime() int64 {
	if x != nil {
		return x.LastBuildTime
	}
	return 0
}

func (x *RuleStatus) GetLastBuildStatus() string {
	if x != nil {
		return x.LastBuildStatus
	}
	return ""
}

// RegisterRequest is sent by devloop to register with the gateway.
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectInfo   *ProjectInfo           `protobuf:"bytes,1,opt,name=project_info,json=projectInfo,proto3" json:"project_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterRequest) GetProjectInfo() *ProjectInfo {
	if x != nil {
		return x.ProjectInfo
	}
	return nil
}

// RegisterResponse is sent by the gateway in response to a registration.
type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// UnregisterRequest is sent by devloop to unregister from the gateway.
type UnregisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterRequest) Reset() {
	*x = UnregisterRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRequest) ProtoMessage() {}

func (x *UnregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterRequest.ProtoReflect.Descriptor instead.
func (*UnregisterRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *UnregisterRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// UnregisterResponse is sent by the gateway in response to unregistration.
type UnregisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterResponse) Reset() {
	*x = UnregisterResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterResponse) ProtoMessage() {}

func (x *UnregisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterResponse.ProtoReflect.Descriptor instead.
func (*UnregisterResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *UnregisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnregisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// StreamLogsRequest is sent by devloop to stream logs to the gateway.
type StreamLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogLine       *LogLine               `protobuf:"bytes,1,opt,name=log_line,json=logLine,proto3" json:"log_line,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsRequest) Reset() {
	*x = StreamLogsRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsRequest) ProtoMessage() {}

func (x *StreamLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsRequest.ProtoReflect.Descriptor instead.
func (*StreamLogsRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *StreamLogsRequest) GetLogLine() *LogLine {
	if x != nil {
		return x.LogLine
	}
	return nil
}

// StreamLogsResponse is sent by the gateway in response to a log line.
type StreamLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsResponse) Reset() {
	*x = StreamLogsResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsResponse) ProtoMessage() {}

func (x *StreamLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsResponse.ProtoReflect.Descriptor instead.
func (*StreamLogsResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *StreamLogsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// UpdateRuleStatusRequest is sent by devloop to update a rule's status.
type UpdateRuleStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleStatus    *RuleStatus            `protobuf:"bytes,1,opt,name=rule_status,json=ruleStatus,proto3" json:"rule_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRuleStatusRequest) Reset() {
	*x = UpdateRuleStatusRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleStatusRequest) ProtoMessage() {}

func (x *UpdateRuleStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleStatusRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRuleStatusRequest) GetRuleStatus() *RuleStatus {
	if x != nil {
		return x.RuleStatus
	}
	return nil
}

// UpdateRuleStatusResponse is sent by the gateway in response to a status update.
type UpdateRuleStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRuleStatusResponse) Reset() {
	*x = UpdateRuleStatusResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleStatusResponse) ProtoMessage() {}

func (x *UpdateRuleStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateRuleStatusResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRuleStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// TriggerRuleRequest is sent by the gateway to devloop to trigger a rule.
type TriggerRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RuleName      string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerRuleRequest) Reset() {
	*x = TriggerRuleRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRuleRequest) ProtoMessage() {}

func (x *TriggerRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRuleRequest.ProtoReflect.Descriptor instead.
func (*TriggerRuleRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *TriggerRuleRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *TriggerRuleRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

// TriggerRuleResponse is sent by devloop in response to a trigger request.
type TriggerRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerRuleResponse) Reset() {
	*x = TriggerRuleResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRuleResponse) ProtoMessage() {}

func (x *TriggerRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRuleResponse.ProtoReflect.Descriptor instead.
func (*TriggerRuleResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *TriggerRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TriggerRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetHistoricalLogsRequest is sent by the gateway to devloop to request historical logs.
type GetHistoricalLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RuleName      string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	StartTime     int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Unix timestamp in milliseconds, for logs after this time
	EndTime       int64                  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Unix timestamp in milliseconds, for logs before this time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoricalLogsRequest) Reset() {
	*x = GetHistoricalLogsRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoricalLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoricalLogsRequest) ProtoMessage() {}

func (x *GetHistoricalLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoricalLogsRequest.ProtoReflect.Descriptor instead.
func (*GetHistoricalLogsRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *GetHistoricalLogsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetHistoricalLogsRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *GetHistoricalLogsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetHistoricalLogsRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetHistoricalLogsRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ListProjectsResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Projects      []*ListProjectsResponse_Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *ListProjectsResponse) GetProjects() []*ListProjectsResponse_Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{15}
}

func (x *GetConfigRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetConfigResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Assuming Config struct from devloop will be mapped here
	// For now, just a placeholder string or bytes
	ConfigJson    []byte `protobuf:"bytes,1,opt,name=config_json,json=configJson,proto3" json:"config_json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{16}
}

func (x *GetConfigResponse) GetConfigJson() []byte {
	if x != nil {
		return x.ConfigJson
	}
	return nil
}

type GetRuleStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RuleName      string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleStatusRequest) Reset() {
	*x = GetRuleStatusRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleStatusRequest) ProtoMessage() {}

func (x *GetRuleStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleStatusRequest.ProtoReflect.Descriptor instead.
func (*GetRuleStatusRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{17}
}

func (x *GetRuleStatusRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetRuleStatusRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

type GetRuleStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleStatus    *RuleStatus            `protobuf:"bytes,1,opt,name=rule_status,json=ruleStatus,proto3" json:"rule_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleStatusResponse) Reset() {
	*x = GetRuleStatusResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleStatusResponse) ProtoMessage() {}

func (x *GetRuleStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleStatusResponse.ProtoReflect.Descriptor instead.
func (*GetRuleStatusResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{18}
}

func (x *GetRuleStatusResponse) GetRuleStatus() *RuleStatus {
	if x != nil {
		return x.RuleStatus
	}
	return nil
}

type TriggerRuleClientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RuleName      string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerRuleClientRequest) Reset() {
	*x = TriggerRuleClientRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRuleClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRuleClientRequest) ProtoMessage() {}

func (x *TriggerRuleClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRuleClientRequest.ProtoReflect.Descriptor instead.
func (*TriggerRuleClientRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{19}
}

func (x *TriggerRuleClientRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *TriggerRuleClientRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

type TriggerRuleClientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerRuleClientResponse) Reset() {
	*x = TriggerRuleClientResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRuleClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRuleClientResponse) ProtoMessage() {}

func (x *TriggerRuleClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRuleClientResponse.ProtoReflect.Descriptor instead.
func (*TriggerRuleClientResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{20}
}

func (x *TriggerRuleClientResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TriggerRuleClientResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListWatchedPathsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWatchedPathsRequest) Reset() {
	*x = ListWatchedPathsRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWatchedPathsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWatchedPathsRequest) ProtoMessage() {}

func (x *ListWatchedPathsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWatchedPathsRequest.ProtoReflect.Descriptor instead.
func (*ListWatchedPathsRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{21}
}

func (x *ListWatchedPathsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListWatchedPathsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paths         []string               `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWatchedPathsResponse) Reset() {
	*x = ListWatchedPathsResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWatchedPathsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWatchedPathsResponse) ProtoMessage() {}

func (x *ListWatchedPathsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWatchedPathsResponse.ProtoReflect.Descriptor instead.
func (*ListWatchedPathsResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{22}
}

func (x *ListWatchedPathsResponse) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type ReadFileContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileContentRequest) Reset() {
	*x = ReadFileContentRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileContentRequest) ProtoMessage() {}

func (x *ReadFileContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileContentRequest.ProtoReflect.Descriptor instead.
func (*ReadFileContentRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{23}
}

func (x *ReadFileContentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ReadFileContentRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ReadFileContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileContentResponse) Reset() {
	*x = ReadFileContentResponse{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileContentResponse) ProtoMessage() {}

func (x *ReadFileContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileContentResponse.ProtoReflect.Descriptor instead.
func (*ReadFileContentResponse) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{24}
}

func (x *ReadFileContentResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type StreamLogsClientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RuleName      string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsClientRequest) Reset() {
	*x = StreamLogsClientRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsClientRequest) ProtoMessage() {}

func (x *StreamLogsClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsClientRequest.ProtoReflect.Descriptor instead.
func (*StreamLogsClientRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{25}
}

func (x *StreamLogsClientRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *StreamLogsClientRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *StreamLogsClientRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type GetHistoricalLogsClientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RuleName      string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	StartTime     int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Unix timestamp in milliseconds, for logs after this time
	EndTime       int64                  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Unix timestamp in milliseconds, for logs before this time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoricalLogsClientRequest) Reset() {
	*x = GetHistoricalLogsClientRequest{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoricalLogsClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoricalLogsClientRequest) ProtoMessage() {}

func (x *GetHistoricalLogsClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoricalLogsClientRequest.ProtoReflect.Descriptor instead.
func (*GetHistoricalLogsClientRequest) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{26}
}

func (x *GetHistoricalLogsClientRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetHistoricalLogsClientRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *GetHistoricalLogsClientRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetHistoricalLogsClientRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetHistoricalLogsClientRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ListProjectsResponse_Project struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectRoot   string                 `protobuf:"bytes,2,opt,name=project_root,json=projectRoot,proto3" json:"project_root,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // e.g., "CONNECTED", "DISCONNECTED"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectsResponse_Project) Reset() {
	*x = ListProjectsResponse_Project{}
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectsResponse_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse_Project) ProtoMessage() {}

func (x *ListProjectsResponse_Project) ProtoReflect() protoreflect.Message {
	mi := &file_devloop_v1_devloop_gateway_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse_Project.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse_Project) Descriptor() ([]byte, []int) {
	return file_devloop_v1_devloop_gateway_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ListProjectsResponse_Project) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListProjectsResponse_Project) GetProjectRoot() string {
	if x != nil {
		return x.ProjectRoot
	}
	return ""
}

func (x *ListProjectsResponse_Project) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_devloop_v1_devloop_gateway_proto protoreflect.FileDescriptor

const file_devloop_v1_devloop_gateway_proto_rawDesc = "" +
	"\n" +
	" devloop/v1/devloop_gateway.proto\x12\x12devloop_gateway.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x15google/api/http.proto\x1a\x1bgoogle/protobuf/empty.proto\"t\n" +
	"\vProjectInfo\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12!\n" +
	"\fproject_root\x18\x02 \x01(\tR\vprojectRoot\x12#\n" +
	"\rinternal_addr\x18\x03 \x01(\tR\finternalAddr\"w\n" +
	"\aLogLine\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\trule_name\x18\x02 \x01(\tR\bruleName\x12\x12\n" +
	"\x04line\x18\x03 \x01(\tR\x04line\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"\xda\x01\n" +
	"\n" +
	"RuleStatus\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\trule_name\x18\x02 \x01(\tR\bruleName\x12\x1d\n" +
	"\n" +
	"is_running\x18\x03 \x01(\bR\tisRunning\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12&\n" +
	"\x0flast_build_time\x18\x05 \x01(\x03R\rlastBuildTime\x12*\n" +
	"\x11last_build_status\x18\x06 \x01(\tR\x0flastBuildStatus\"U\n" +
	"\x0fRegisterRequest\x12B\n" +
	"\fproject_info\x18\x01 \x01(\v2\x1f.devloop_gateway.v1.ProjectInfoR\vprojectInfo\"F\n" +
	"\x10RegisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"2\n" +
	"\x11UnregisterRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"H\n" +
	"\x12UnregisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"K\n" +
	"\x11StreamLogsRequest\x126\n" +
	"\blog_line\x18\x01 \x01(\v2\x1b.devloop_gateway.v1.LogLineR\alogLine\".\n" +
	"\x12StreamLogsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"Z\n" +
	"\x17UpdateRuleStatusRequest\x12?\n" +
	"\vrule_status\x18\x01 \x01(\v2\x1e.devloop_gateway.v1.RuleStatusR\n" +
	"ruleStatus\"4\n" +
	"\x18UpdateRuleStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"P\n" +
	"\x12TriggerRuleRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\trule_name\x18\x02 \x01(\tR\bruleName\"I\n" +
	"\x13TriggerRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa8\x01\n" +
	"\x18GetHistoricalLogsRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\trule_name\x18\x02 \x01(\tR\bruleName\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\x03R\aendTime\"\xc9\x01\n" +
	"\x14ListProjectsResponse\x12L\n" +
	"\bprojects\x18\x01 \x03(\v20.devloop_gateway.v1.ListProjectsResponse.ProjectR\bprojects\x1ac\n" +
	"\aProject\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12!\n" +
	"\fproject_root\x18\x02 \x01(\tR\vprojectRoot\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"1\n" +
	"\x10GetConfigRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"4\n" +
	"\x11GetConfigResponse\x12\x1f\n" +
	"\vconfig_json\x18\x01 \x01(\fR\n" +
	"configJson\"R\n" +
	"\x14GetRuleStatusRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\trule_name\x18\x02 \x01(\tR\bruleName\"X\n" +
	"\x15GetRuleStatusResponse\x12?\n" +
	"\vrule_status\x18\x01 \x01(\v2\x1e.devloop_gateway.v1.RuleStatusR\n" +
	"ruleStatus\"V\n" +
	"\x18TriggerRuleClientRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\trule_name\x18\x02 \x01(\tR\bruleName\"O\n" +
	"\x19TriggerRuleClientResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"8\n" +
	"\x17ListWatchedPathsRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"0\n" +
	"\x18ListWatchedPathsResponse\x12\x14\n" +
	"\x05paths\x18\x01 \x03(\tR\x05paths\"K\n" +
	"\x16ReadFileContentRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"3\n" +
	"\x17ReadFileContentResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\"m\n" +
	"\x17StreamLogsClientRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\trule_name\x18\x02 \x01(\tR\bruleName\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\"\xae\x01\n" +
	"\x1eGetHistoricalLogsClientRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\trule_name\x18\x02 \x01(\tR\bruleName\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\x03R\aendTime2\xdd\x04\n" +
	"\x15DevloopGatewayService\x12U\n" +
	"\bRegister\x12#.devloop_gateway.v1.RegisterRequest\x1a$.devloop_gateway.v1.RegisterResponse\x12[\n" +
	"\n" +
	"Unregister\x12%.devloop_gateway.v1.UnregisterRequest\x1a&.devloop_gateway.v1.UnregisterResponse\x12_\n" +
	"\n" +
	"StreamLogs\x12%.devloop_gateway.v1.StreamLogsRequest\x1a&.devloop_gateway.v1.StreamLogsResponse(\x010\x01\x12m\n" +
	"\x10UpdateRuleStatus\x12+.devloop_gateway.v1.UpdateRuleStatusRequest\x1a,.devloop_gateway.v1.UpdateRuleStatusResponse\x12^\n" +
	"\vTriggerRule\x12&.devloop_gateway.v1.TriggerRuleRequest\x1a'.devloop_gateway.v1.TriggerRuleResponse\x12`\n" +
	"\x11GetHistoricalLogs\x12,.devloop_gateway.v1.GetHistoricalLogsRequest\x1a\x1b.devloop_gateway.v1.LogLine0\x012\xb9\t\n" +
	"\x14GatewayClientService\x12c\n" +
	"\fListProjects\x12\x16.google.protobuf.Empty\x1a(.devloop_gateway.v1.ListProjectsResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/projects\x12\x7f\n" +
	"\tGetConfig\x12$.devloop_gateway.v1.GetConfigRequest\x1a%.devloop_gateway.v1.GetConfigResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/projects/{project_id}/config\x12\x97\x01\n" +
	"\rGetRuleStatus\x12(.devloop_gateway.v1.GetRuleStatusRequest\x1a).devloop_gateway.v1.GetRuleStatusResponse\"1\x82\xd3\xe4\x93\x02+\x12)/projects/{project_id}/status/{rule_name}\x12\xa4\x01\n" +
	"\x11TriggerRuleClient\x12,.devloop_gateway.v1.TriggerRuleClientRequest\x1a-.devloop_gateway.v1.TriggerRuleClientResponse\"2\x82\xd3\xe4\x93\x02,\"*/projects/{project_id}/trigger/{rule_name}\x12\x9b\x01\n" +
	"\x10ListWatchedPaths\x12+.devloop_gateway.v1.ListWatchedPathsRequest\x1a,.devloop_gateway.v1.ListWatchedPathsResponse\",\x82\xd3\xe4\x93\x02&\x12$/projects/{project_id}/watched-paths\x12\x97\x01\n" +
	"\x0fReadFileContent\x12*.devloop_gateway.v1.ReadFileContentRequest\x1a+.devloop_gateway.v1.ReadFileContentResponse\"+\x82\xd3\xe4\x93\x02%\x12#/projects/{project_id}/file-content\x12\x96\x01\n" +
	"\x10StreamLogsClient\x12+.devloop_gateway.v1.StreamLogsClientRequest\x1a\x1b.devloop_gateway.v1.LogLine\"6\x82\xd3\xe4\x93\x020\x12./projects/{project_id}/stream/logs/{rule_name}0\x01\x12\xa8\x01\n" +
	"\x17GetHistoricalLogsClient\x122.devloop_gateway.v1.GetHistoricalLogsClientRequest\x1a\x1b.devloop_gateway.v1.LogLine\":\x82\xd3\xe4\x93\x024\x122/projects/{project_id}/historical-logs/{rule_name}0\x01B\xad\x01\n" +
	"\x16com.devloop_gateway.v1B\x13DevloopGatewayProtoP\x01Z\x19devloop/protos/devloop/v1\xa2\x02\x03DXX\xaa\x02\x11DevloopGateway.V1\xca\x02\x11DevloopGateway\\V1\xe2\x02\x1dDevloopGateway\\V1\\GPBMetadata\xea\x02\x12DevloopGateway::V1b\x06proto3"

var (
	file_devloop_v1_devloop_gateway_proto_rawDescOnce sync.Once
	file_devloop_v1_devloop_gateway_proto_rawDescData []byte
)

func file_devloop_v1_devloop_gateway_proto_rawDescGZIP() []byte {
	file_devloop_v1_devloop_gateway_proto_rawDescOnce.Do(func() {
		file_devloop_v1_devloop_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_devloop_v1_devloop_gateway_proto_rawDesc), len(file_devloop_v1_devloop_gateway_proto_rawDesc)))
	})
	return file_devloop_v1_devloop_gateway_proto_rawDescData
}

var file_devloop_v1_devloop_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_devloop_v1_devloop_gateway_proto_goTypes = []any{
	(*ProjectInfo)(nil),                    // 0: devloop_gateway.v1.ProjectInfo
	(*LogLine)(nil),                        // 1: devloop_gateway.v1.LogLine
	(*RuleStatus)(nil),                     // 2: devloop_gateway.v1.RuleStatus
	(*RegisterRequest)(nil),                // 3: devloop_gateway.v1.RegisterRequest
	(*RegisterResponse)(nil),               // 4: devloop_gateway.v1.RegisterResponse
	(*UnregisterRequest)(nil),              // 5: devloop_gateway.v1.UnregisterRequest
	(*UnregisterResponse)(nil),             // 6: devloop_gateway.v1.UnregisterResponse
	(*StreamLogsRequest)(nil),              // 7: devloop_gateway.v1.StreamLogsRequest
	(*StreamLogsResponse)(nil),             // 8: devloop_gateway.v1.StreamLogsResponse
	(*UpdateRuleStatusRequest)(nil),        // 9: devloop_gateway.v1.UpdateRuleStatusRequest
	(*UpdateRuleStatusResponse)(nil),       // 10: devloop_gateway.v1.UpdateRuleStatusResponse
	(*TriggerRuleRequest)(nil),             // 11: devloop_gateway.v1.TriggerRuleRequest
	(*TriggerRuleResponse)(nil),            // 12: devloop_gateway.v1.TriggerRuleResponse
	(*GetHistoricalLogsRequest)(nil),       // 13: devloop_gateway.v1.GetHistoricalLogsRequest
	(*ListProjectsResponse)(nil),           // 14: devloop_gateway.v1.ListProjectsResponse
	(*GetConfigRequest)(nil),               // 15: devloop_gateway.v1.GetConfigRequest
	(*GetConfigResponse)(nil),              // 16: devloop_gateway.v1.GetConfigResponse
	(*GetRuleStatusRequest)(nil),           // 17: devloop_gateway.v1.GetRuleStatusRequest
	(*GetRuleStatusResponse)(nil),          // 18: devloop_gateway.v1.GetRuleStatusResponse
	(*TriggerRuleClientRequest)(nil),       // 19: devloop_gateway.v1.TriggerRuleClientRequest
	(*TriggerRuleClientResponse)(nil),      // 20: devloop_gateway.v1.TriggerRuleClientResponse
	(*ListWatchedPathsRequest)(nil),        // 21: devloop_gateway.v1.ListWatchedPathsRequest
	(*ListWatchedPathsResponse)(nil),       // 22: devloop_gateway.v1.ListWatchedPathsResponse
	(*ReadFileContentRequest)(nil),         // 23: devloop_gateway.v1.ReadFileContentRequest
	(*ReadFileContentResponse)(nil),        // 24: devloop_gateway.v1.ReadFileContentResponse
	(*StreamLogsClientRequest)(nil),        // 25: devloop_gateway.v1.StreamLogsClientRequest
	(*GetHistoricalLogsClientRequest)(nil), // 26: devloop_gateway.v1.GetHistoricalLogsClientRequest
	(*ListProjectsResponse_Project)(nil),   // 27: devloop_gateway.v1.ListProjectsResponse.Project
	(*emptypb.Empty)(nil),                  // 28: google.protobuf.Empty
}
var file_devloop_v1_devloop_gateway_proto_depIdxs = []int32{
	0,  // 0: devloop_gateway.v1.RegisterRequest.project_info:type_name -> devloop_gateway.v1.ProjectInfo
	1,  // 1: devloop_gateway.v1.StreamLogsRequest.log_line:type_name -> devloop_gateway.v1.LogLine
	2,  // 2: devloop_gateway.v1.UpdateRuleStatusRequest.rule_status:type_name -> devloop_gateway.v1.RuleStatus
	27, // 3: devloop_gateway.v1.ListProjectsResponse.projects:type_name -> devloop_gateway.v1.ListProjectsResponse.Project
	2,  // 4: devloop_gateway.v1.GetRuleStatusResponse.rule_status:type_name -> devloop_gateway.v1.RuleStatus
	3,  // 5: devloop_gateway.v1.DevloopGatewayService.Register:input_type -> devloop_gateway.v1.RegisterRequest
	5,  // 6: devloop_gateway.v1.DevloopGatewayService.Unregister:input_type -> devloop_gateway.v1.UnregisterRequest
	7,  // 7: devloop_gateway.v1.DevloopGatewayService.StreamLogs:input_type -> devloop_gateway.v1.StreamLogsRequest
	9,  // 8: devloop_gateway.v1.DevloopGatewayService.UpdateRuleStatus:input_type -> devloop_gateway.v1.UpdateRuleStatusRequest
	11, // 9: devloop_gateway.v1.DevloopGatewayService.TriggerRule:input_type -> devloop_gateway.v1.TriggerRuleRequest
	13, // 10: devloop_gateway.v1.DevloopGatewayService.GetHistoricalLogs:input_type -> devloop_gateway.v1.GetHistoricalLogsRequest
	28, // 11: devloop_gateway.v1.GatewayClientService.ListProjects:input_type -> google.protobuf.Empty
	15, // 12: devloop_gateway.v1.GatewayClientService.GetConfig:input_type -> devloop_gateway.v1.GetConfigRequest
	17, // 13: devloop_gateway.v1.GatewayClientService.GetRuleStatus:input_type -> devloop_gateway.v1.GetRuleStatusRequest
	19, // 14: devloop_gateway.v1.GatewayClientService.TriggerRuleClient:input_type -> devloop_gateway.v1.TriggerRuleClientRequest
	21, // 15: devloop_gateway.v1.GatewayClientService.ListWatchedPaths:input_type -> devloop_gateway.v1.ListWatchedPathsRequest
	23, // 16: devloop_gateway.v1.GatewayClientService.ReadFileContent:input_type -> devloop_gateway.v1.ReadFileContentRequest
	25, // 17: devloop_gateway.v1.GatewayClientService.StreamLogsClient:input_type -> devloop_gateway.v1.StreamLogsClientRequest
	26, // 18: devloop_gateway.v1.GatewayClientService.GetHistoricalLogsClient:input_type -> devloop_gateway.v1.GetHistoricalLogsClientRequest
	4,  // 19: devloop_gateway.v1.DevloopGatewayService.Register:output_type -> devloop_gateway.v1.RegisterResponse
	6,  // 20: devloop_gateway.v1.DevloopGatewayService.Unregister:output_type -> devloop_gateway.v1.UnregisterResponse
	8,  // 21: devloop_gateway.v1.DevloopGatewayService.StreamLogs:output_type -> devloop_gateway.v1.StreamLogsResponse
	10, // 22: devloop_gateway.v1.DevloopGatewayService.UpdateRuleStatus:output_type -> devloop_gateway.v1.UpdateRuleStatusResponse
	12, // 23: devloop_gateway.v1.DevloopGatewayService.TriggerRule:output_type -> devloop_gateway.v1.TriggerRuleResponse
	1,  // 24: devloop_gateway.v1.DevloopGatewayService.GetHistoricalLogs:output_type -> devloop_gateway.v1.LogLine
	14, // 25: devloop_gateway.v1.GatewayClientService.ListProjects:output_type -> devloop_gateway.v1.ListProjectsResponse
	16, // 26: devloop_gateway.v1.GatewayClientService.GetConfig:output_type -> devloop_gateway.v1.GetConfigResponse
	18, // 27: devloop_gateway.v1.GatewayClientService.GetRuleStatus:output_type -> devloop_gateway.v1.GetRuleStatusResponse
	20, // 28: devloop_gateway.v1.GatewayClientService.TriggerRuleClient:output_type -> devloop_gateway.v1.TriggerRuleClientResponse
	22, // 29: devloop_gateway.v1.GatewayClientService.ListWatchedPaths:output_type -> devloop_gateway.v1.ListWatchedPathsResponse
	24, // 30: devloop_gateway.v1.GatewayClientService.ReadFileContent:output_type -> devloop_gateway.v1.ReadFileContentResponse
	1,  // 31: devloop_gateway.v1.GatewayClientService.StreamLogsClient:output_type -> devloop_gateway.v1.LogLine
	1,  // 32: devloop_gateway.v1.GatewayClientService.GetHistoricalLogsClient:output_type -> devloop_gateway.v1.LogLine
	19, // [19:33] is the sub-list for method output_type
	5,  // [5:19] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_devloop_v1_devloop_gateway_proto_init() }
func file_devloop_v1_devloop_gateway_proto_init() {
	if File_devloop_v1_devloop_gateway_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_devloop_v1_devloop_gateway_proto_rawDesc), len(file_devloop_v1_devloop_gateway_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_devloop_v1_devloop_gateway_proto_goTypes,
		DependencyIndexes: file_devloop_v1_devloop_gateway_proto_depIdxs,
		MessageInfos:      file_devloop_v1_devloop_gateway_proto_msgTypes,
	}.Build()
	File_devloop_v1_devloop_gateway_proto = out.File
	file_devloop_v1_devloop_gateway_proto_goTypes = nil
	file_devloop_v1_devloop_gateway_proto_depIdxs = nil
}
